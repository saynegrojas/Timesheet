@using PagedList;
<<<<<<< HEAD
@using PagedList.Mvc; 
=======
@using PagedList.Mvc;
>>>>>>> c5ac97e390aff9b7e69a0fd268eff545da2701fe
@model IPagedList<Timesheet.Models.Schedule>

@{
    ViewBag.Title = "Index";
}
<div class="navbar-collapse collapse">
    <ul class="nav navbar-nav">
        <li>@Html.ActionLink("User", "Index", "Users")</li>
        <li>@Html.ActionLink("TimeCard", "Index", "Doctors")</li>
        <li>@Html.ActionLink("Reports", "Index", "Schedules")</li>
    </ul>
</div>

<<<<<<< HEAD
<h2 style="color:black;">@Html.ActionLink("Index", "Index")</h2>

@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@

<p>
    @using (Html.BeginForm("Index", "Schedules", FormMethod.Get))
    {
    <b>Search By:</b> @Html.RadioButton("SearchBy", "FileNumber", true) <text>FileNumber</text>
    @Html.RadioButton("SearchBy", "FirstName") <text>FirstName</text><br />
    @Html.TextBox("search") <input type="submit" value="Search" />
    }
</p>
<table class="table">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.First().Doctor.FileNumber)*@
            @Html.ActionLink("FileNumber", "Index", new { sortBy = ViewBag.SortFileNumberParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
        </th>
        <th>
            @*@Html.DisplayNameFor(model => model.First().Doctor.FirstName)*@
            @Html.ActionLink("FirstName", "Index", new { sortBy = ViewBag.SortNameParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"]})
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Doctor.LastName)
        <th>
=======
<style>
    a.first-name {
        color: #333333;
        font-weight: bold;
    }

    #reset {
        background-color: #56baed;
        border: none;
        color: white;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        text-transform: uppercase;
        font-size: 13px;
        -webkit-box-shadow: 0 10px 30px 0 rgba(95,186,233,0.4);
        box-shadow: 0 10px 30px 0 rgba(95,186,233,0.4);
        -webkit-border-radius: 5px 5px 5px 5px;
        border-radius: 5px 5px 5px 5px;
        margin: 5px 20px 40px 20px;
        -webkit-appearance: button;
        cursor: pointer;
    }

        #reset > a {
            text-decoration: none;
            color: white;
        }

        #reset:focus {
            background-color: #fff;
            border-bottom: 2px solid #5fbae9;
        }

        #reset:active {
            -moz-transform: scale(0.95);
            -webkit-transform: scale(0.95);
            -o-transform: scale(0.95);
            -ms-transform: scale(0.95);
            transform: scale(0.95);
        }

        #reset:hover {
            background-color: #39ace7;
        }
</style>
<h2>Report</h2>
<p>
    @using (Html.BeginForm("Index", "Schedules", FormMethod.Get))
    {
        <b>Search By:</b>
        @Html.RadioButton("SearchBy", "FirstName") <text>First Name</text>
        <br />
        @Html.TextBox("search") <input type="submit" value="Search" />

        <button id="reset">@Html.ActionLink("Reset", "Index")</button>

    }
</p>
<table class="table table-striped table-hover">
    <tr>
        <th>
            @*@Html.DisplayNameFor(model => model.First().Doctor.FirstName)*@
            @Html.ActionLink("FirstName", "Index", new { sortBy = ViewBag.SortNameParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] }, htmlAttributes: new { @class = "first-name", datatoggle = "tooltip", title = $"Click to sort by first name" })
            @*@Html.ActionLink(item.CodeDescription, "Details", new { id = item.CodeID }, new { datatoggle = "tooltip", title = $"Click for details" })*@

        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Doctor.LastName)
        <th>
>>>>>>> c5ac97e390aff9b7e69a0fd268eff545da2701fe
            @Html.DisplayNameFor(model => model.First().Time_In)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Time_Out)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Doctor.Location.LocationName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().HourCode.CodeDescription)
        </th>
        <th>
<<<<<<< HEAD
            PayRate/Hour
        </th>
        <th></th>
    </tr>
@if (Model.Count() == 0)
{
    <tr>
        <td colspan="8">No record was found</td>
    </tr>
}
else
{
    foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Doctor.FileNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Doctor.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Doctor.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time_In)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Time_Out)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Doctor.Location.LocationName)
            </td>
            <td>
                @Html.DisplayFor(modelItemgit => item.HourCode.CodeDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ScheduleID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ScheduleID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ScheduleID })
            </td>
        </tr>
    }
}

</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"]}),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded }
    )
<tr>
    <th>@Html.ActionLink("Back to User", "Index", "Users")</th>
</tr>
=======
            @Html.DisplayName("Payrate/hour")
        </th>
        <th></th>
    </tr>
    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="8">No record was found</td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Doctor.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Doctor.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Time_In)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Time_Out)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Doctor.Location.LocationName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HourCode.CodeDescription)
                </td>
                <td>
                    $ @Html.DisplayFor(modelItem => item.Amount)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ScheduleID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ScheduleID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ScheduleID })
                </td>
            </tr>
        }
    }

</table>
<div>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded })
</div>

>>>>>>> c5ac97e390aff9b7e69a0fd268eff545da2701fe
