@model Timesheet.Models.Location

@{
    ViewBag.Title = "Create New Location";
}

@*<h2>  </h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Location</h4>
        <hr />
        @Html.ValidationSummary(true, ViewBag.ValSummary as string, new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LocationName, "Location Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LocationName, ViewBag.ValLocationName as string, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SectionID, "Sector name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SectionID", null, new { name = "SectorName", id = "SectorName", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SectionID, ViewBag.ValSectorName as string, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>

    <script>
        document.getElementById("SectorName").value = "@ViewBag.strSlectedSector";
        document.getElementById("SectorName").classList.add('form-control');
        //document.getElementById("SectorName").class = "form-control";
    </script>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Location</h4>
        <hr />
        @Html.ValidationSummary(true, ViewBag.ValSummary as string, new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.LocationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LocationName, new { htmlAttributes = new { @class = "form-control" } })
                <div>
                    @Html.ValidationMessageFor(model => model.LocationName, ViewBag.ValLocationName as string, new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SectionID, "Sector", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SectionID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SectionID, ViewBag.ValSectorName as string, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
        document.getElementById("SectorName").value = "@ViewBag.strSlectedSector";
        document.getElementById("SectorName").classList.add('form-control');
        //document.getElementById("SectorName").class = "form-control";
</script>